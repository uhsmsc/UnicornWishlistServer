# .github/workflows/docker-release.yml
name: Build, Push and Deploy Docker Image on Release

on:
  release:
    types: [created]
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    outputs:
      tag: ${{ steps.release_tag.outputs.tag }}
      repo: ${{ steps.set_repo.outputs.repo }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract release tag
        id: release_tag
        run: echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: Set lowercase image repo
        id: set_repo
        run: echo "repo=$(echo ghcr.io/${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build \
            -t ${{ steps.set_repo.outputs.repo }}:${{ steps.release_tag.outputs.tag }} \
            -t ${{ steps.set_repo.outputs.repo }}:latest \
            .

      - name: Push Docker images
        run: |
          docker push ${{ steps.set_repo.outputs.repo }}:${{ steps.release_tag.outputs.tag }}
          docker push ${{ steps.set_repo.outputs.repo }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull ${{ needs.build-and-push.outputs.repo }}:${{ needs.build-and-push.outputs.tag }}
            docker stop unicorn || true
            docker rm unicorn || true
            docker run -d --name unicorn -p 127.0.0.1:3000:3000 -e TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} -e JWT_SECRET=${{ secrets.JWT_SECRET }} -e ENIVIREMENT=production -e MONGO_URI="${{ secrets.MONGO_URI }}" ${{ needs.build-and-push.outputs.repo }}:${{ needs.build-and-push.outputs.tag }}
